@use 'sass:map';
@use 'src/app/root-styles/variables' as root;
@use 'src/app/mat-theme' as mat;
@use 'src/app/media-query' as *;
@use 'src/app/utils' as *;

@use './header';
@use './quiz';

.wg {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;

  &-nav {
    display: flex;
    flex-wrap: nowrap;
    overflow-y: auto;
    width: 100%;
    flex-shrink: 0;

    background-color: map.get(mat.$light-theme, background, app-bar);
    .dark-theme & {
      background-color: map.get(mat.$dark-theme, background, app-bar);
    }

    &-link {
      flex-grow: 1;
      flex-shrink: 0;
      border-radius: 0;
    }
  }

  &-data, &-quiz {
    width: 100%;
  }

  &-data {
    padding: 8px;
  }


  &-quiz {
    display: flex;
    margin: 8px;
    border-radius: 4px;
    overflow: hidden;

    &-editor {
      width: 100%;
      height: 100%;
    }

    &-action-wrapper {
      height: 100%;

      border-left: 1.6px solid map.get(mat.$light-theme, foreground, divider);
      .dark-theme & {
        border-left: 1.6px solid map.get(mat.$dark-theme, foreground, divider);
      }

      box-sizing: border-box;
    }

    &-action {
      display: flex;
      justify-content: center;
      width: 32px;
      height: 32px;
      min-width: 0;
      line-height: 1;
      padding: 0;
      border-radius: 0;

      &-divider {
        display: block;
        width: 24px;
        height: 2px;
        margin: 0 4px;
        border-radius: 2px;
        background-color: map.get(mat.$light-theme, foreground, divider);
        .dark-theme & {
          background-color: map.get(mat.$dark-theme, foreground, divider);
        }
      }

      &-icon {
        padding: 4px;
      }
    }
  }


  &-sign-in {
    &-button, &-loading-spinner {
      top: -24px;
      margin: auto;
    }

    &-label {
      margin-left: 8px;
    }
  }

  &-loading {
    &-spinner {
      position: relative;
      top: 0; left: 0; right: 0; bottom: 0;
      margin: auto;

      width: 160px;
      height: 160px;
      transform: rotate(-90deg);
      transform-origin: center;
      animation: rm-loading-spinner-linear-rotate 2000ms linear infinite;
      overflow: visible;
    }
    
    &-circle {
      animation: rm-loading-spinner-stroke-rotate 4000ms cubic-bezier(0.34, 0, 0.24, 1) infinite;
      transition: stroke-dashoffset 224ms linear;
      transform-origin: center;
      fill: transparent;
      stroke: map.get(mat.$accent-palette, default);
    }
  }
}


@include pc {
  .wg {
    flex-direction: row;

    &-nav {
      flex-direction: column;
      overflow-x: auto;
      overflow-y: hidden;

      // width: 120px;
      width: auto;
      height: 100%;

      &-link {
        flex-grow: 0;
      }
    }


    &-data {
      flex-grow: 1;
    }


    &-quiz {
      flex-grow: 1;
    }
  }
}


@keyframes rm-loading-spinner-linear-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes rm-loading-spinner-stroke-rotate {
  0%      { stroke-dashoffset: 448;  transform: rotate(0); }
  12.5%   { stroke-dashoffset: 94;    transform: rotate(0); }
  12.5001%  { stroke-dashoffset: 94;    transform: rotateX(180deg) rotate(72.5deg); }
  25%     { stroke-dashoffset: 448;  transform: rotateX(180deg) rotate(72.5deg); }

  25.0001%   { stroke-dashoffset: 448;  transform: rotate(270deg); }
  37.5%   { stroke-dashoffset: 94;    transform: rotate(270deg); }
  37.5001%  { stroke-dashoffset: 94;    transform: rotateX(180deg) rotate(161.5deg); }
  50%     { stroke-dashoffset: 448;  transform: rotateX(180deg) rotate(161.5deg); }

  50.0001%  { stroke-dashoffset: 448;  transform: rotate(180deg); }
  62.5%   { stroke-dashoffset: 94;    transform: rotate(180deg); }
  62.5001%  { stroke-dashoffset: 94;    transform: rotateX(180deg) rotate(251.5deg); }
  75%     { stroke-dashoffset: 448;  transform: rotateX(180deg) rotate(251.5deg); }

  75.0001%  { stroke-dashoffset: 448;  transform: rotate(90deg); }
  87.5%   { stroke-dashoffset: 94;    transform: rotate(90deg); }
  87.5001%  { stroke-dashoffset: 94;    transform: rotateX(180deg) rotate(341.5deg); }
  100%    { stroke-dashoffset: 448;  transform: rotateX(180deg) rotate(341.5deg); }
}
